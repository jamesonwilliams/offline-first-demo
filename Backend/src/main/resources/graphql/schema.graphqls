type Query {
    listAppointments: [Appointment!]!
    getAppointment(id: ID!): Appointment
}

type Mutation {
    addAppointment(
        patientName: String!
        startTime: String!
        endTime: String!
    ): Appointment!

    modifyAppointment(
        id: ID!
        patientName: String
        startTime: String
        endTime: String
        status: AppointmentStatus
        lastUpdated: String,
    ): Appointment!

    syncAppointments(
        clientAppointments: [AppointmentInput!]!
    ): [Appointment!]!
}

input AppointmentInput {
    id: ID!
    patientName: String!
    startTime: String!
    endTime: String!
    status: AppointmentStatus!
    lastUpdated: String!
}

type Subscription {
    appointmentChange: Appointment!
}

type Appointment {
    id: ID!
    patientName: String!
    startTime: String!
    endTime: String!
    status: AppointmentStatus!
    lastUpdated: String!
}

enum AppointmentStatus {
    Scheduled
    Recording
    Paused
    Completed
    Cancelled
}
